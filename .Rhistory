, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
)
# Draw world maps
# dev.off()
mapCountryData(myMap
, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
)
# self-defined colors
colors <- c("#FF8000", "#A9D0F5", "#58ACFA", "#0080FF", "#084B8A")
mapCountryData(myMap
, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
, colourPalette = colors
, addLegend="FALSE"
)
par(mfrow=c(4,5), mai= c(0.2, 0.2, 0.2, 0.2))
for(i in 51:69){
mapCountryData(myMap
, nameColumnToPlot=names(myMap)[i]
, catMethod = "categorical"
, colourPalette = colors
, addLegend="FALSE"
)
}
df <- fread("data/population.csv", h = T)
df <- read.csv("data/population.csv", h = T)
View(df)
df <- read.csv("data/population.csv", header = T)
str(df)
options(stringsAsFactors = F)
df <- read.csv("data/population.csv", header = T)
names(df) <- c("cname", "cat", "population")
library(maptools)
taiwan_shp <- readShapeSpatial("data/gadm36_TWN_shp/gadm36_TWN_2.shp")
taiwan_map <- fortify(taiwan_shp)
library(ggplot2)
taiwan_map <- fortify(taiwan_shp)
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
?? coord_map
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
ggplot2::coord_map()
install.packages("mapproj")
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
View(taiwan_map)
taiwan_shp$GID_0
taiwan_shp$GID_2
taiwan_shp$NAME_2
View(taiwan_map)
taiwan_shp$NAME_1
taiwan_shp$NAME_2
taiwan_shp$VARNAME_2
taiwan_shp$NL_NAME_2
taiwan_shp %>%
mutate(id = row_number())
library(dplyr)
taiwan_shp %>%
mutate(id = row_number())
taiwan_shp$id = row_number(taiwan_shp)
data.frame(cname = taiwan_shp$NAME_2, which(taiwan_shp$NAME_2))
data.frame(cname = taiwan_shp$NAME_2, 0:21)
data.frame(cname = taiwan_shp$CC_2, 0:21)
data.frame(cname = taiwan_shp$NL_NAME_2, id=0:21)
View(df)
taiwan_shp$NL_NAME_2
df$cname
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=0:21)
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣", "澎湖縣", "屏東縣",
"臺東縣", "桃園市", "宜蘭縣", "雲林縣")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=0:21)
View(taiwan_map)
View(df)
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=as.character(0:21))
toplot <- taiwan_map %>%
left_join(id2name, by="id")
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
library(RColorBrewer)
library(dplyr)
taiwan_shp$NL_NAME_2
# [1] 金門縣   馬祖列島 高雄市   新北市   台中     台南     台北市   彰化縣
#  [9] 嘉義市   嘉義縣   新竹市   新竹縣   花蓮縣   基隆市   苗栗縣   南投縣
# [17] 澎湖縣   屏東縣   台東縣   桃園市   宜蘭縣   雲林縣
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣", "澎湖縣", "屏東縣",
"臺東縣", "桃園市", "宜蘭縣", "雲林縣")
df$cname
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=as.character(0:21))
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
ggplot() +
ggplot() + geom_polygon(data = toplot,
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") + labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") + labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)")
ggplot() +
geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) +
coord_map() +
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)")
library(rworldmap)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T)
metadata <- read.csv("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T)
View(idata)
idata <- read.csv2("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T, sep = ";")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>%
rename("1", "2", "3")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>%
rename("1", "2", "3", "4")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>% View
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V2 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
View(idata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(duplicated(.))
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
View(metadata)
idata <- idata %>%
left_join(metadata, by = "country")
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
View(idata)
View(metadata)
View(idata)
ndata <- idata %>%
left_join(metadata, by = "country")
View(ndata)
ndata <- idata %>%
left_join(metadata)
View(ndata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
mutate(nc = nchar(country))
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.)) %>%
mutate(nc = nchar(country))
View(metadata)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(x = country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>% View
idata <- idata %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- idata %>%
trimws(.$country) %>%
mutate(nc = nchar(country))
idata <- idata %>%
trimws(.$country) %>% View
idata$country <- trimws(idata$country)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
idata$country <- trimws(idata$country)
View(idata)
ndata <- idata %>%
left_join(metadata)
View(ndata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
idata$country <- trimws(idata$country)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
ndata <- idata %>%
left_join(metadata)
View(ndata)
ndata <- idata %>%
left_join(metadata) %>%
na.omit()
View(ndata)
myMap <- joinCountryData2Map(ndata, joinCode = "ISO2", nameJoinColumn = "iso2")
?mapCountryData
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "quantiles"
, colourPalette = colors
, addLegend="FALSE"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "quantiles"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "pretty"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "logFixedWidth"
)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, income = V3)
idata$country <- trimws(idata$country)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
ndata <- idata %>%
left_join(metadata) %>%
na.omit()
mapCountryData(myMap
, nameColumnToPlot="income"
, catMethod = "quantiles"
)
myMap <- joinCountryData2Map(ndata, joinCode = "ISO2", nameJoinColumn = "iso2")
?mapCountryData
mapCountryData(myMap
, nameColumnToPlot="income"
, catMethod = "quantiles"
)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(rvest) #library(xml2)
options(stringsAsFactors = F)
link <- "https://www.ptt.cc/bbs/Boy-Girl/index.html"
doc <- read_html(link)
class(doc)
node.a <- html_nodes(doc, css)
css = "#main-container > div.r-list-container.action-bar-margin.bbs-screen > div:nth-child(3) > div.title > a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links
text <- html_text(node.a)
text
css = "#main-container > div.r-list-container.action-bar-margin.bbs-screen > div > div.title > a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
text <- html_text(node.a)
text
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
text <- html_text(node.a)
links
pre <- "https://www.ptt.cc"
pre <- "https://www.ptt.cc"
links <- paste0(pre, links)
links
browseURL(links[1])
browseURL(links[6])
browseURL(links[5])
link <- "https://news.ltn.com.tw/search?keyword=%E6%9F%AF%E6%96%87%E5%93%B2&conditions=and&SYear=2019&SMonth=1&SDay=15&EYear=2019&EMonth=4&EDay=15"
doc <- read_html(link)
css = "#newslistul li a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links
url <- "https://www.ptt.cc/bbs/Boy-Girl/index.html"
doc <- read_html(url)
doc <- read_html(url)
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links <- paste0(pre, links)
browseURL(links[5])
url <- "https://www.ptt.cc/bbs/Boy-Girl/index4370.html"
doc <- read_html(url)
doc <- read_html(url)
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links <- paste0(pre, links)
for(p in 4361:4370){
url <- paste0("https://www.ptt.cc/bbs/Boy-Girl/index", p, ".html")
print(url)
}
for(p in 4361:4370){
url <- paste0("https://www.ptt.cc/bbs/Boy-Girl/index", p, ".html")
print(url)
doc <- read_html(url)
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links <- paste0(pre, links)
all_links <- c(all_links, links)
}
all_links <- c()
for(p in 4361:4370){
url <- paste0("https://www.ptt.cc/bbs/Boy-Girl/index", p, ".html")
print(url)
doc <- read_html(url)
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links <- paste0(pre, links)
all_links <- c(all_links, links)
}
lenght(all_links)
length(all_links)
all_links <- c()
for(p in 4361:4370){
url <- paste0("https://www.ptt.cc/bbs/Boy-Girl/index", p, ".html")
print(url)
doc <- read_html(url)
css = "#main-container .r-ent .title a"
node.a <- html_nodes(doc, css)
links <- html_attr(node.a, "href")
links <- paste0(pre, links)
all_links <- c(all_links, links)
}
url <- all_links[1]
url
browseURL(url)
metadata.css <- "#main-content div span.article-meta-value"
doc <- read_html(url)
metadata.css <- "#main-content div span.article-meta-value"
metadata.nodes <- html_nodes(doc, metadata.css)
metadata <- html_text(metadata.nodes)
metadata
content.node <- html_node(doc, content.css)
content.css <- "#main-content"
content.node <- html_node(doc, content.css)
content <- html_text(content.node)
content
content.xpath <- '//*[@id="main-content"]/text()'
content.nodes <- html_nodes(doc, xpath = content.xpath)
content <- html_text(content.nodes)
content
content <- paste(content, collapse = "")
content
temp.df <- data.frame(uid = metadata[1],
title = metadata[3],
timestamp = metadata[4],
url = url,
content = content)
View(temp.df)
posts.df <- data.frame()
for(i in 1:length(all_links)){
url <- all_links[i]
doc <- read_html(url)
metadata.css <- "#main-content div span.article-meta-value"
metadata.nodes <- html_nodes(doc, metadata.css)
metadata <- html_text(metadata.nodes)
content.xpath <- '//*[@id="main-content"]/text()'
content.nodes <- html_nodes(doc, xpath = content.xpath)
content <- html_text(content.nodes)
content <- paste(content, collapse = "")
temp.df <- data.frame(uid = metadata[1],
title = metadata[3],
timestamp = metadata[4],
url = url,
content = content)
posts.df <- bind_rows(posts.df, temp.df)
}
library(dplyr)
library(dplyr)
posts.df <- data.frame()
for(i in 1:length(all_links)){
print(i)
url <- all_links[i]
doc <- read_html(url)
metadata.css <- "#main-content div span.article-meta-value"
metadata.nodes <- html_nodes(doc, metadata.css)
metadata <- html_text(metadata.nodes)
content.xpath <- '//*[@id="main-content"]/text()'
content.nodes <- html_nodes(doc, xpath = content.xpath)
content <- html_text(content.nodes)
content <- paste(content, collapse = "")
temp.df <- data.frame(uid = metadata[1],
title = metadata[3],
timestamp = metadata[4],
url = url,
content = content)
posts.df <- bind_rows(posts.df, temp.df)
}
View(posts.df)

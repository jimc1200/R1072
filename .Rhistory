# filter row data by column value
df[df$import > df$export,]
df[df$import > df$export,]$country
df[df$import > df$export,1]
# 1 row == a data.frame with only one data entry
class(df[df$import > df$export,1])
class(df[,1]) # character vector
class(df[1,]) # data.frame
class(unlist(df[1, -1])) # filter the 1st row and select all columns except 1
# 1 row == a data.frame with only one data entry
class(df[df$import > df$export,1])
class(df[,1]) # character vector
class(df[1,]) # data.frame
class(unlist(df[1, -1])) # filter the 1st row and select all columns except 1
# sort rows by df$import column
df.sorted <- df[order(df$import),]
# View(df.sorted)
# sort rows in decreasing order
df.sorted <- df[order(df$import, decreasing = T),]
# add - to column in order() can sort in decreasing order
df.sorted <- df[order(-df$import),]
# View(df.sorted)
# add - to column in order() can sort in decreasing order
df.sorted <- df[order(-df$import),]
View(df.sorted)
head(df.sorted)
# plot(df) # raise error, 1st column is a character vector
plot(df[, 2:3])
plot(df[1:10, 2:3])
text(import, export, labels=country, cex= 0.5, pos=3)
lines(1:25, 1:25, col='red')
?plot
df <- data.frame(country, import, export)
str(df)
df <- data.frame(country, import, export, stringsAsFactors = FALSE)
str(df)
df <- data.frame(country, import, export, stringsAsFactors = F)
df <- mutate(df, sub = import - export)
library(dplyr)
df <- data.frame(country, import, export, stringsAsFactors = F)
df <- mutate(df, sub = import - export)
df <- filter(df, import > explort)
filter(df, import > export)
select(df, c(1, 3))
knitr::opts_chunk$set(echo = TRUE)
ldata <- read_excel("data/WORLD-MACHE_Gender_6.8.15.xls", "Sheet1", col_names=T)
library(readxl)
options(stringsAsFactors = FALSE)
ldata <- read_excel("data/WORLD-MACHE_Gender_6.8.15.xls", "Sheet1", col_names=T)
# select columns by index
matleave <- ldata[ , c(3, 6:24)]
str(matleave)
# select all NA cells and assign 0 to them
matleave[is.na(matleave)] <- 0
# filter rows by condition
m5 <- matleave[matleave$'matleave_13' == 5, ]
# filter rows by condition
m55<- m5[m5$'matleave_95' == 5,]
# plot
par(mfrow=c(4,6), mai= c(0.2, 0.2, 0.2, 0.2))
for (i in c(1:nrow(m55))){
barplot(unlist(m55[i,-1]),
border=NA, space=0,xaxt="n", yaxt="n", ylim = c(0,5))
title(m55[i,1], line = -4, cex.main=3)
}
matleave <- select(ldata, c(3, 6:24))
str(matleave)
matleave <- replace_na(matleave, 0)
?replace_na
??replace_na
matleave <- replace_na(matleave$., 0)
# matleave <- replace_na(matleave, 0)
matleave <- replace(matleave, is.na(.), 0)
# matleave <- replace_na(matleave, 0)
matleave <- replace(is.na(matleave), 0)
# matleave <- replace_na(matleave, 0)
matleave <- matleave %>% replace(is.na(.), 0)
# matleave <- replace_na(matleave, 0)
matleave <- replace(matleave, is.na(matleave), 0)
matleave <- select(ldata, c(3, 6:24))
# matleave <- replace_na(matleave, 0)
matleave <- replace(matleave, is.na(matleave), 0)
View(matleave)
# filter rows by condition
# m5 <- matleave[matleave$'matleave_13' == 5, ]
mt <- filter(matleave, matleave_13 == 5)
# filter rows by condition
m55<- m5[m5$'matleave_95' == 5,]
# filter rows by condition
# m5 <- matleave[matleave$'matleave_13' == 5, ]
m5 <- filter(matleave, matleave_13 == 5)
# filter rows by condition
# m55<- m5[m5$'matleave_95' == 5,]
m55 <- filter(m5, matleave_95 == 5)
View(m55)
# plot
par(mfrow=c(4,6), mai= c(0.2, 0.2, 0.2, 0.2))
for (i in c(1:nrow(m55))){
barplot(unlist(m55[i,-1]),
border=NA, space=0,xaxt="n", yaxt="n", ylim = c(0,5))
title(m55[i,1], line = -4, cex.main=3)
}
par(mfrow=c(4,6), mai= c(0.2, 0.2, 0.2, 0.2))
for (i in c(1:nrow(m55))){
barplot(unlist(m55[i,-1]),
border=NA, space=0,xaxt="n", yaxt="n", ylim = c(0,5))
title(m55[i,1], line = -4, cex.main=3)
}
View(m55)
barplot(m55[2,])
barplot(m55[2, -1])
barplot(unlist(matleave[2, -1]))
# Correct version
barplot(unlist(m55[2, -1]))
# Add more arguments
barplot(unlist(m55[2, -1]))
barplot(unlist(m55[2, -1]), ylim=c(0, 5))
barplot(unlist(m55[2, -1]), ylim=c(0, 5), space=0)
barplot(unlist(m55[2, -1]), ylim=c(0, 5), space=0, border=NA)
barplot(unlist(m55[2, -1]), ylim=c(0, 5), space=0, border=NA, xaxt="n", yaxt="n")
class(m55[1])		# "tbl_df"     "tbl"        "data.frame"
class(m55[ ,1])	# "tbl_df"     "tbl"        "data.frame"
class(m55[1, ])	# "tbl_df"     "tbl"        "data.frame"
class(m55$iso3)	# character (vector)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
options(stringsAsFactors = FALSE)
ldata <- read_excel("data/WORLD-MACHE_Gender_6.8.15.xls", "Sheet1", col_names=T)
# select columns by index
matleave <- ldata[ , c(3, 6:24)]
str(matleave)
# select all NA cells and assign 0 to them
matleave[is.na(matleave)] <- 0
# filter rows by condition
m5 <- matleave[matleave$'matleave_13' == 5, ]
# filter rows by condition
m55<- m5[m5$'matleave_95' == 5,]
# plot
par(mfrow=c(4,6), mai= c(0.2, 0.2, 0.2, 0.2))
for (i in c(1:nrow(m55))){
barplot(unlist(m55[i,-1]),
border=NA, space=0,xaxt="n", yaxt="n", ylim = c(0,5))
title(m55[i,1], line = -4, cex.main=3)
}
# install.packages("rworldmap")
library(rworldmap)# drawing worldmap
install.packages("rworldmap")
# install.packages("rworldmap")
library(rworldmap)# drawing worldmap
# select cols
mdata <- ldata[,c(3, 6:24)]
# join your data with the world map data
myMap <- joinCountryData2Map(mdata, joinCode = "ISO3", nameJoinColumn = "iso3")
myMap$matleave_13
# Draw world maps
dev.off()
mapCountryData(myMap
, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
)
# Draw world maps
# dev.off()
mapCountryData(myMap
, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
)
# self-defined colors
colors <- c("#FF8000", "#A9D0F5", "#58ACFA", "#0080FF", "#084B8A")
mapCountryData(myMap
, nameColumnToPlot="matleave_13"
, catMethod = "categorical"
, colourPalette = colors
, addLegend="FALSE"
)
par(mfrow=c(4,5), mai= c(0.2, 0.2, 0.2, 0.2))
for(i in 51:69){
mapCountryData(myMap
, nameColumnToPlot=names(myMap)[i]
, catMethod = "categorical"
, colourPalette = colors
, addLegend="FALSE"
)
}
df <- fread("data/population.csv", h = T)
df <- read.csv("data/population.csv", h = T)
View(df)
df <- read.csv("data/population.csv", header = T)
str(df)
options(stringsAsFactors = F)
df <- read.csv("data/population.csv", header = T)
names(df) <- c("cname", "cat", "population")
library(maptools)
taiwan_shp <- readShapeSpatial("data/gadm36_TWN_shp/gadm36_TWN_2.shp")
taiwan_map <- fortify(taiwan_shp)
library(ggplot2)
taiwan_map <- fortify(taiwan_shp)
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
?? coord_map
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
ggplot2::coord_map()
install.packages("mapproj")
ggplot(taiwan_map, aes(x = long, y = lat, group=group)) +
geom_path() +
coord_map()
View(taiwan_map)
taiwan_shp$GID_0
taiwan_shp$GID_2
taiwan_shp$NAME_2
View(taiwan_map)
taiwan_shp$NAME_1
taiwan_shp$NAME_2
taiwan_shp$VARNAME_2
taiwan_shp$NL_NAME_2
taiwan_shp %>%
mutate(id = row_number())
library(dplyr)
taiwan_shp %>%
mutate(id = row_number())
taiwan_shp$id = row_number(taiwan_shp)
data.frame(cname = taiwan_shp$NAME_2, which(taiwan_shp$NAME_2))
data.frame(cname = taiwan_shp$NAME_2, 0:21)
data.frame(cname = taiwan_shp$CC_2, 0:21)
data.frame(cname = taiwan_shp$NL_NAME_2, id=0:21)
View(df)
taiwan_shp$NL_NAME_2
df$cname
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=0:21)
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣", "澎湖縣", "屏東縣",
"臺東縣", "桃園市", "宜蘭縣", "雲林縣")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=0:21)
View(taiwan_map)
View(df)
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=as.character(0:21))
toplot <- taiwan_map %>%
left_join(id2name, by="id")
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
library(RColorBrewer)
library(dplyr)
taiwan_shp$NL_NAME_2
# [1] 金門縣   馬祖列島 高雄市   新北市   台中     台南     台北市   彰化縣
#  [9] 嘉義市   嘉義縣   新竹市   新竹縣   花蓮縣   基隆市   苗栗縣   南投縣
# [17] 澎湖縣   屏東縣   台東縣   桃園市   宜蘭縣   雲林縣
cname = c("金門縣", "連江縣", "高雄市", "新北市", "臺中市", "臺南市",
"臺北市", "彰化縣", "嘉義市", "嘉義縣", "新竹市", "新竹縣",
"花蓮縣", "基隆市", "苗栗縣", "南投縣", "澎湖縣", "屏東縣",
"臺東縣", "桃園市", "宜蘭縣", "雲林縣")
df$cname
#  [1] "新北市" "臺中市" "高雄市" "臺北市" "桃園市" "臺南市" "彰化縣" "屏東縣"
#  [9] "雲林縣" "新竹縣" "苗栗縣" "嘉義縣" "南投縣" "宜蘭縣" "新竹市" "基隆市"
# [17] "花蓮縣" "嘉義市" "臺東縣" "金門縣" "澎湖縣" "連江縣"
id2name <- data.frame(cname, id=as.character(0:21))
toplot <- taiwan_map %>%
left_join(id2name, by="id") %>%
left_join(df, by="cname")
ggplot() +
ggplot() + geom_polygon(data = toplot,
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") +
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") + labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)") + labs(title="台灣縣市人口分佈圖", x ="經度", y = "緯度")
ggplot() + geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) + coord_map() + scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)")
ggplot() +
geom_polygon(data = toplot, aes(x = long, y = lat, group = group, fill = population/10000), color = "black", size = 0.25) +
coord_map() +
scale_fill_gradientn(colours = brewer.pal(9,"Reds"), name = "人口(萬)")
library(rworldmap)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T)
metadata <- read.csv("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T)
View(idata)
idata <- read.csv2("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", header = T, sep = ";")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>%
rename("1", "2", "3")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>%
rename("1", "2", "3", "4")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1:3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>% View
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V2 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(V1 = "country", V3 = "population")
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
View(idata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2)
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(duplicated(.))
View(metadata)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
View(metadata)
idata <- idata %>%
left_join(metadata, by = "country")
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
View(idata)
View(metadata)
View(idata)
ndata <- idata %>%
left_join(metadata, by = "country")
View(ndata)
ndata <- idata %>%
left_join(metadata)
View(ndata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
mutate(nc = nchar(country))
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.)) %>%
mutate(nc = nchar(country))
View(metadata)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(country) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
trimws(x = country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>%
stringr::str_trim(country) %>% View
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3) %>% View
idata <- idata %>%
stringr::str_trim(country) %>%
mutate(nc = nchar(country))
idata <- idata %>%
trimws(.$country) %>%
mutate(nc = nchar(country))
idata <- idata %>%
trimws(.$country) %>% View
idata$country <- trimws(idata$country)
View(idata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
idata$country <- trimws(idata$country)
View(idata)
ndata <- idata %>%
left_join(metadata)
View(ndata)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, population = V3)
idata$country <- trimws(idata$country)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
ndata <- idata %>%
left_join(metadata)
View(ndata)
ndata <- idata %>%
left_join(metadata) %>%
na.omit()
View(ndata)
myMap <- joinCountryData2Map(ndata, joinCode = "ISO2", nameJoinColumn = "iso2")
?mapCountryData
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "quantiles"
, colourPalette = colors
, addLegend="FALSE"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "quantiles"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "pretty"
)
mapCountryData(myMap
, nameColumnToPlot="population"
, catMethod = "logFixedWidth"
)
idata <- read.csv("data/WID_Data_Metadata/WID_Data_21022019-105611.csv", sep = ";", skip = 8, header = F) %>%
select(1,3) %>%
rename(country = V1, income = V3)
idata$country <- trimws(idata$country)
metadata <- read.csv2("data/WID_Data_Metadata/WID_Metadata_21022019-105611.csv", header = T, sep = ";", skip = 1) %>%
select(1, 2) %>%
rename(iso2 = Country.Code, country = Country.Name) %>%
filter(nchar(iso2) == 2) %>%
filter(nchar(country) > 0) %>%
filter(!duplicated(.))
ndata <- idata %>%
left_join(metadata) %>%
na.omit()
mapCountryData(myMap
, nameColumnToPlot="income"
, catMethod = "quantiles"
)
myMap <- joinCountryData2Map(ndata, joinCode = "ISO2", nameJoinColumn = "iso2")
?mapCountryData
mapCountryData(myMap
, nameColumnToPlot="income"
, catMethod = "quantiles"
)
